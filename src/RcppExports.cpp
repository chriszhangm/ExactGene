// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ExactGen
List ExactGen(arma::vec Xt, arma::vec Xc, arma::vec Nt, arma::vec Nc, arma::vec pcupper, arma::vec pclower, double Thetagrid, double Pgrid, double cov_prob, double B, double dev_region_num);
RcppExport SEXP _ExactGene_ExactGen(SEXP XtSEXP, SEXP XcSEXP, SEXP NtSEXP, SEXP NcSEXP, SEXP pcupperSEXP, SEXP pclowerSEXP, SEXP ThetagridSEXP, SEXP PgridSEXP, SEXP cov_probSEXP, SEXP BSEXP, SEXP dev_region_numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Xt(XtSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Xc(XcSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Nt(NtSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Nc(NcSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pcupper(pcupperSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pclower(pclowerSEXP);
    Rcpp::traits::input_parameter< double >::type Thetagrid(ThetagridSEXP);
    Rcpp::traits::input_parameter< double >::type Pgrid(PgridSEXP);
    Rcpp::traits::input_parameter< double >::type cov_prob(cov_probSEXP);
    Rcpp::traits::input_parameter< double >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type dev_region_num(dev_region_numSEXP);
    rcpp_result_gen = Rcpp::wrap(ExactGen(Xt, Xc, Nt, Nc, pcupper, pclower, Thetagrid, Pgrid, cov_prob, B, dev_region_num));
    return rcpp_result_gen;
END_RCPP
}
// individual_p_cpp
List individual_p_cpp(double xt, double xc, double nt, double nc, double pcupper, double pclower, arma::vec theta_grd, double Pgrid, double dev_region_num);
RcppExport SEXP _ExactGene_individual_p_cpp(SEXP xtSEXP, SEXP xcSEXP, SEXP ntSEXP, SEXP ncSEXP, SEXP pcupperSEXP, SEXP pclowerSEXP, SEXP theta_grdSEXP, SEXP PgridSEXP, SEXP dev_region_numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type xt(xtSEXP);
    Rcpp::traits::input_parameter< double >::type xc(xcSEXP);
    Rcpp::traits::input_parameter< double >::type nt(ntSEXP);
    Rcpp::traits::input_parameter< double >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< double >::type pcupper(pcupperSEXP);
    Rcpp::traits::input_parameter< double >::type pclower(pclowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_grd(theta_grdSEXP);
    Rcpp::traits::input_parameter< double >::type Pgrid(PgridSEXP);
    Rcpp::traits::input_parameter< double >::type dev_region_num(dev_region_numSEXP);
    rcpp_result_gen = Rcpp::wrap(individual_p_cpp(xt, xc, nt, nc, pcupper, pclower, theta_grd, Pgrid, dev_region_num));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ExactGene_ExactGen", (DL_FUNC) &_ExactGene_ExactGen, 11},
    {"_ExactGene_individual_p_cpp", (DL_FUNC) &_ExactGene_individual_p_cpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_ExactGene(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
